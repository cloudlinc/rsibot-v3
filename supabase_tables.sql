create table bot_config (
     id uuid default uuid_generate_v4() primary key,
     ticker text not null,
     rsi_buy_threshold float not null default 30,
     rsi_sell_threshold float not null default 70,
     macd_enabled boolean not null default true,
     manual_mode boolean not null default false,
     shares_per_trade integer not null default 10,
     created_at timestamp with time zone default timezone('utc'::text, now()) not null,
     updated_at timestamp with time zone default timezone('utc'::text, now()) not null
   );

   create table trade_signals (
     id uuid default uuid_generate_v4() primary key,
     ticker text not null,
     action text not null,
     rsi float not null,
     macd float not null,
     status text not null default 'PENDING',
     created_at timestamp with time zone default timezone('utc'::text, now()) not null,
     updated_at timestamp with time zone default timezone('utc'::text, now()) not null
   );

    create table trade_history (
     id uuid default uuid_generate_v4() primary key,
     ticker text not null,
     action text not null,
     rsi float not null,
     macd float not null,
     executed_at timestamp with time zone default timezone('utc'::text, now()) not null
   );

   create table trade_status (
     id uuid default uuid_generate_v4() primary key,
     ticker text not null,
     status text not null,
     created_at timestamp with time zone default timezone('utc'::text, now()) not null
   );
   
   create table trade_logs (
     id uuid default uuid_generate_v4() primary key,
     ticker text not null,
     action text not null,
     rsi float not null,
     macd float not null,
     created_at timestamp with time zone default timezone('utc'::text, now()) not null
   );

   create table bot_health (
     id uuid default uuid_generate_v4() primary key,
     status text not null,
     created_at timestamp with time zone default timezone('utc'::text, now()) not null
   );

   create table bot_errors (
     id uuid default uuid_generate_v4() primary key,
     error text not null,
     created_at timestamp with time zone default timezone('utc'::text, now()) not null
   );

   create table trade_attempts (
     id uuid default uuid_generate_v4() primary key,
     ticker text not null,
     action text not null,
     rsi float not null,
     macd float not null,
     created_at timestamp with time zone default timezone('utc'::text, now()) not null
   );


   // new

   -- Table to store all trading activity
create table trades (
    id bigint generated by default as identity primary key,
    symbol text not null,
    action text not null check (action in ('BUY', 'SELL')),
    rsi float not null,
    timestamp timestamptz not null default now(),
    created_at timestamptz not null default now()
);

-- Add indexes for better query performance
create index trades_symbol_idx on trades(symbol);
create index trades_timestamp_idx on trades(timestamp);

-- Enable Row Level Security (RLS)
alter table trades enable row level security;

-- Create a policy that allows all operations for authenticated users
create policy "Enable all operations for authenticated users" on trades
    for all using (auth.role() = 'authenticated');

    -- Table to store daily performance metrics
create table performance_metrics (
    id bigint generated by default as identity primary key,
    symbol text not null,
    date date not null,
    closing_price float,
    rsi_value float,
    position_size int,
    pnl float,
    created_at timestamptz not null default now(),
    unique(symbol, date)
);

-- Add indexes
create index performance_metrics_symbol_date_idx on performance_metrics(symbol, date);

-- Enable RLS
alter table performance_metrics enable row level security;

-- Create policy
create policy "Enable all operations for authenticated users" on performance_metrics
    for all using (auth.role() = 'authenticated');